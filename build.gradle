apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
	mavenRepo url:"https://nexus.codehaus.org/content/repositories/snapshots"
}


test {
    if (project.hasProperty('maxParallelForks')) 
        maxParallelForks = project.maxParallelForks as int
    if (project.hasProperty('forkEvery')) 
        forkEvery = project.forkEvery as int
}

// The drivers we want to use
drivers = ["htmlunit"]

dependencies {
	groovy "org.codehaus.groovy:groovy-all:1.7.5"
	
	def gebVersion = "0.6.0"
	def seleniumVersion = "2.0rc3"
	
	// If using Spock, need to depend on geb-spock
	testCompile "org.codehaus.geb:geb-spock:$gebVersion"
	testCompile "org.spockframework:spock-core:0.5-groovy-1.7"
	
	// If using JUnit, need to depend on geb-junit (3 or 4)
	testCompile "org.codehaus.geb:geb-junit4:$gebVersion"
	testCompile "junit:junit-dep:4.8.2"
	
	// Drivers
	drivers.each { driver ->
		testCompile "org.seleniumhq.selenium:selenium-$driver-driver:$seleniumVersion"
	}
}

drivers.each { driver ->
	task "${driver}Test"(type: Test) {
        def grailsWorkDir = new File(buildDir, 'grails-work')
        def projectWorkDir = new File(buildDir, 'project-work')
        def outputDir = new File(buildDir, 'output')
	    
	    doFirst {
            [grailsWorkDir, projectWorkDir, outputDir].each {
                it.deleteDir()
                assert it.mkdirs()
            }	        
	    }
		testReportDir = file("$reportsDir/$name/tests")
		testResultsDir = file("$buildDir/test-results/$name")
		
		systemProperty "geb.build.reportsDir", "$reportsDir/$name/geb"
		systemProperty "geb.env", driver
        systemProperty 'grailsHome', System.properties['grails.home'] ?:  new File('../grails-master').exists() ? new File('../grails-master').absolutePath : new File('../grails-core').absolutePath
        systemProperty 'grailsWorkDir',  grailsWorkDir.canonicalPath
        systemProperty 'projectWorkDir',  projectWorkDir.canonicalPath
        systemProperty 'outputDir', outputDir.canonicalPath
		
		// If you wanted to set the baseUrl in your buildâ€¦
		// systemProperty "geb.build.baseUrl", "http://myapp.com"
	}
}

task test(overwrite: true, dependsOn: drivers.collect { tasks["${it}Test"] })

tasks.addRule("Pattern: testSingle<Name> will test **/<Name>Tests.class") {String taskName ->
    if (taskName.startsWith("testSingle")) {
        drivers.each {
            tasks["${it}Test"].includes = ['**/' + taskName.substring(10) + 'Spec.class']
        }
        tasks.add(name: taskName).dependsOn test
    }
}

